// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.26.0
// source: api/monthCard/v1/monthCard.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CommonReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *CommonReply) Reset() {
	*x = CommonReply{}
	mi := &file_api_monthCard_v1_monthCard_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommonReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonReply) ProtoMessage() {}

func (x *CommonReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_monthCard_v1_monthCard_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonReply.ProtoReflect.Descriptor instead.
func (*CommonReply) Descriptor() ([]byte, []int) {
	return file_api_monthCard_v1_monthCard_proto_rawDescGZIP(), []int{0}
}

func (x *CommonReply) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CommonReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type RewarData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RewardId  int64  `protobuf:"varint,1,opt,name=rewardId,proto3" json:"rewardId,omitempty"`
	RewardNum int64  `protobuf:"varint,2,opt,name=rewardNum,proto3" json:"rewardNum,omitempty"`
	RewardUrl string `protobuf:"bytes,3,opt,name=rewardUrl,proto3" json:"rewardUrl,omitempty"`
}

func (x *RewarData) Reset() {
	*x = RewarData{}
	mi := &file_api_monthCard_v1_monthCard_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RewarData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RewarData) ProtoMessage() {}

func (x *RewarData) ProtoReflect() protoreflect.Message {
	mi := &file_api_monthCard_v1_monthCard_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RewarData.ProtoReflect.Descriptor instead.
func (*RewarData) Descriptor() ([]byte, []int) {
	return file_api_monthCard_v1_monthCard_proto_rawDescGZIP(), []int{1}
}

func (x *RewarData) GetRewardId() int64 {
	if x != nil {
		return x.RewardId
	}
	return 0
}

func (x *RewarData) GetRewardNum() int64 {
	if x != nil {
		return x.RewardNum
	}
	return 0
}

func (x *RewarData) GetRewardUrl() string {
	if x != nil {
		return x.RewardUrl
	}
	return ""
}

type OpenMonthCardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *OpenMonthCardRequest) Reset() {
	*x = OpenMonthCardRequest{}
	mi := &file_api_monthCard_v1_monthCard_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OpenMonthCardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenMonthCardRequest) ProtoMessage() {}

func (x *OpenMonthCardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_monthCard_v1_monthCard_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenMonthCardRequest.ProtoReflect.Descriptor instead.
func (*OpenMonthCardRequest) Descriptor() ([]byte, []int) {
	return file_api_monthCard_v1_monthCard_proto_rawDescGZIP(), []int{2}
}

func (x *OpenMonthCardRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type OpenMonthCardReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     int64 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	ExpireTime int64 `protobuf:"varint,2,opt,name=expireTime,proto3" json:"expireTime,omitempty"`
}

func (x *OpenMonthCardReply) Reset() {
	*x = OpenMonthCardReply{}
	mi := &file_api_monthCard_v1_monthCard_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OpenMonthCardReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenMonthCardReply) ProtoMessage() {}

func (x *OpenMonthCardReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_monthCard_v1_monthCard_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenMonthCardReply.ProtoReflect.Descriptor instead.
func (*OpenMonthCardReply) Descriptor() ([]byte, []int) {
	return file_api_monthCard_v1_monthCard_proto_rawDescGZIP(), []int{3}
}

func (x *OpenMonthCardReply) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *OpenMonthCardReply) GetExpireTime() int64 {
	if x != nil {
		return x.ExpireTime
	}
	return 0
}

type GetMonthCardRewardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Day int64 `protobuf:"varint,1,opt,name=day,proto3" json:"day,omitempty"`
}

func (x *GetMonthCardRewardRequest) Reset() {
	*x = GetMonthCardRewardRequest{}
	mi := &file_api_monthCard_v1_monthCard_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMonthCardRewardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMonthCardRewardRequest) ProtoMessage() {}

func (x *GetMonthCardRewardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_monthCard_v1_monthCard_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMonthCardRewardRequest.ProtoReflect.Descriptor instead.
func (*GetMonthCardRewardRequest) Descriptor() ([]byte, []int) {
	return file_api_monthCard_v1_monthCard_proto_rawDescGZIP(), []int{4}
}

func (x *GetMonthCardRewardRequest) GetDay() int64 {
	if x != nil {
		return x.Day
	}
	return 0
}

type GetMonthCardRewardReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common *CommonReply `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
}

func (x *GetMonthCardRewardReply) Reset() {
	*x = GetMonthCardRewardReply{}
	mi := &file_api_monthCard_v1_monthCard_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMonthCardRewardReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMonthCardRewardReply) ProtoMessage() {}

func (x *GetMonthCardRewardReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_monthCard_v1_monthCard_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMonthCardRewardReply.ProtoReflect.Descriptor instead.
func (*GetMonthCardRewardReply) Descriptor() ([]byte, []int) {
	return file_api_monthCard_v1_monthCard_proto_rawDescGZIP(), []int{5}
}

func (x *GetMonthCardRewardReply) GetCommon() *CommonReply {
	if x != nil {
		return x.Common
	}
	return nil
}

type GetMonthCardListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *GetMonthCardListRequest) Reset() {
	*x = GetMonthCardListRequest{}
	mi := &file_api_monthCard_v1_monthCard_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMonthCardListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMonthCardListRequest) ProtoMessage() {}

func (x *GetMonthCardListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_monthCard_v1_monthCard_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMonthCardListRequest.ProtoReflect.Descriptor instead.
func (*GetMonthCardListRequest) Descriptor() ([]byte, []int) {
	return file_api_monthCard_v1_monthCard_proto_rawDescGZIP(), []int{6}
}

func (x *GetMonthCardListRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetMonthCardListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*GetMonthCardListReplyCardData `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *GetMonthCardListReply) Reset() {
	*x = GetMonthCardListReply{}
	mi := &file_api_monthCard_v1_monthCard_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMonthCardListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMonthCardListReply) ProtoMessage() {}

func (x *GetMonthCardListReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_monthCard_v1_monthCard_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMonthCardListReply.ProtoReflect.Descriptor instead.
func (*GetMonthCardListReply) Descriptor() ([]byte, []int) {
	return file_api_monthCard_v1_monthCard_proto_rawDescGZIP(), []int{7}
}

func (x *GetMonthCardListReply) GetList() []*GetMonthCardListReplyCardData {
	if x != nil {
		return x.List
	}
	return nil
}

// CommonReply common = 1;
type GetMonthCardListReplyCardData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Day       int64  `protobuf:"varint,1,opt,name=day,proto3" json:"day,omitempty"`
	Status    int64  `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	RewardId  int64  `protobuf:"varint,3,opt,name=rewardId,proto3" json:"rewardId,omitempty"`
	RewardUrl string `protobuf:"bytes,4,opt,name=rewardUrl,proto3" json:"rewardUrl,omitempty"`
}

func (x *GetMonthCardListReplyCardData) Reset() {
	*x = GetMonthCardListReplyCardData{}
	mi := &file_api_monthCard_v1_monthCard_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMonthCardListReplyCardData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMonthCardListReplyCardData) ProtoMessage() {}

func (x *GetMonthCardListReplyCardData) ProtoReflect() protoreflect.Message {
	mi := &file_api_monthCard_v1_monthCard_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMonthCardListReplyCardData.ProtoReflect.Descriptor instead.
func (*GetMonthCardListReplyCardData) Descriptor() ([]byte, []int) {
	return file_api_monthCard_v1_monthCard_proto_rawDescGZIP(), []int{7, 0}
}

func (x *GetMonthCardListReplyCardData) GetDay() int64 {
	if x != nil {
		return x.Day
	}
	return 0
}

func (x *GetMonthCardListReplyCardData) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetMonthCardListReplyCardData) GetRewardId() int64 {
	if x != nil {
		return x.RewardId
	}
	return 0
}

func (x *GetMonthCardListReplyCardData) GetRewardUrl() string {
	if x != nil {
		return x.RewardUrl
	}
	return ""
}

var File_api_monthCard_v1_monthCard_proto protoreflect.FileDescriptor

var file_api_monthCard_v1_monthCard_proto_rawDesc = []byte{
	0x0a, 0x20, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x43, 0x61, 0x72, 0x64, 0x2f,
	0x76, 0x31, 0x2f, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x43, 0x61, 0x72, 0x64, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x10, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x43, 0x61, 0x72,
	0x64, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x33, 0x0a, 0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x63, 0x0a, 0x09, 0x72, 0x65, 0x77, 0x61, 0x72,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x4e, 0x75, 0x6d, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x4e, 0x75, 0x6d, 0x12, 0x1c,
	0x0a, 0x09, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x55, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x55, 0x72, 0x6c, 0x22, 0x2e, 0x0a, 0x14,
	0x4f, 0x70, 0x65, 0x6e, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x4c, 0x0a, 0x12,
	0x4f, 0x70, 0x65, 0x6e, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x2d, 0x0a, 0x19, 0x47, 0x65,
	0x74, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x61, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x64, 0x61, 0x79, 0x22, 0x50, 0x0a, 0x17, 0x47, 0x65, 0x74,
	0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x35, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x6f, 0x6e, 0x74, 0x68,
	0x43, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x22, 0x31, 0x0a, 0x17, 0x47,
	0x65, 0x74, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x43, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xcd,
	0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x43, 0x61, 0x72, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x44, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x6f, 0x6e,
	0x74, 0x68, 0x43, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x6e,
	0x74, 0x68, 0x43, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e,
	0x63, 0x61, 0x72, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x1a, 0x6e,
	0x0a, 0x08, 0x63, 0x61, 0x72, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x61,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x64, 0x61, 0x79, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x55, 0x72, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x55, 0x72, 0x6c, 0x32, 0xa3,
	0x03, 0x0a, 0x09, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x43, 0x61, 0x72, 0x64, 0x12, 0x7b, 0x0a, 0x0d,
	0x4f, 0x70, 0x65, 0x6e, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x43, 0x61, 0x72, 0x64, 0x12, 0x26, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x43, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x6f, 0x6e, 0x74,
	0x68, 0x43, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x4d, 0x6f, 0x6e,
	0x74, 0x68, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1c, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x16, 0x3a, 0x01, 0x2a, 0x22, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x70, 0x65, 0x6e,
	0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x43, 0x61, 0x72, 0x64, 0x12, 0x8e, 0x01, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x43, 0x61, 0x72, 0x64, 0x52, 0x77, 0x61, 0x72, 0x64, 0x12,
	0x2b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x43, 0x61, 0x72, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x43, 0x61, 0x72, 0x64, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x43, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x3a,
	0x01, 0x2a, 0x22, 0x16, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x4d, 0x6f, 0x6e, 0x74, 0x68,
	0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x87, 0x01, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x43, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x43, 0x61, 0x72, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x43, 0x61, 0x72, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x43, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x43, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x3a, 0x01, 0x2a, 0x22, 0x14,
	0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x43, 0x61, 0x72, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x42, 0x33, 0x0a, 0x10, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x6f, 0x6e, 0x74,
	0x68, 0x43, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x50, 0x01, 0x5a, 0x1d, 0x6d, 0x6f, 0x6e, 0x74,
	0x68, 0x43, 0x61, 0x72, 0x64, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x43,
	0x61, 0x72, 0x64, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_api_monthCard_v1_monthCard_proto_rawDescOnce sync.Once
	file_api_monthCard_v1_monthCard_proto_rawDescData = file_api_monthCard_v1_monthCard_proto_rawDesc
)

func file_api_monthCard_v1_monthCard_proto_rawDescGZIP() []byte {
	file_api_monthCard_v1_monthCard_proto_rawDescOnce.Do(func() {
		file_api_monthCard_v1_monthCard_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_monthCard_v1_monthCard_proto_rawDescData)
	})
	return file_api_monthCard_v1_monthCard_proto_rawDescData
}

var file_api_monthCard_v1_monthCard_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_api_monthCard_v1_monthCard_proto_goTypes = []any{
	(*CommonReply)(nil),                   // 0: api.monthCard.v1.CommonReply
	(*RewarData)(nil),                     // 1: api.monthCard.v1.rewarData
	(*OpenMonthCardRequest)(nil),          // 2: api.monthCard.v1.OpenMonthCardRequest
	(*OpenMonthCardReply)(nil),            // 3: api.monthCard.v1.OpenMonthCardReply
	(*GetMonthCardRewardRequest)(nil),     // 4: api.monthCard.v1.GetMonthCardRewardRequest
	(*GetMonthCardRewardReply)(nil),       // 5: api.monthCard.v1.GetMonthCardRewardReply
	(*GetMonthCardListRequest)(nil),       // 6: api.monthCard.v1.GetMonthCardListRequest
	(*GetMonthCardListReply)(nil),         // 7: api.monthCard.v1.GetMonthCardListReply
	(*GetMonthCardListReplyCardData)(nil), // 8: api.monthCard.v1.GetMonthCardListReply.cardData
}
var file_api_monthCard_v1_monthCard_proto_depIdxs = []int32{
	0, // 0: api.monthCard.v1.GetMonthCardRewardReply.common:type_name -> api.monthCard.v1.CommonReply
	8, // 1: api.monthCard.v1.GetMonthCardListReply.list:type_name -> api.monthCard.v1.GetMonthCardListReply.cardData
	2, // 2: api.monthCard.v1.MonthCard.OpenMonthCard:input_type -> api.monthCard.v1.OpenMonthCardRequest
	4, // 3: api.monthCard.v1.MonthCard.GetMonthCardRward:input_type -> api.monthCard.v1.GetMonthCardRewardRequest
	6, // 4: api.monthCard.v1.MonthCard.GetMonthCardList:input_type -> api.monthCard.v1.GetMonthCardListRequest
	3, // 5: api.monthCard.v1.MonthCard.OpenMonthCard:output_type -> api.monthCard.v1.OpenMonthCardReply
	5, // 6: api.monthCard.v1.MonthCard.GetMonthCardRward:output_type -> api.monthCard.v1.GetMonthCardRewardReply
	7, // 7: api.monthCard.v1.MonthCard.GetMonthCardList:output_type -> api.monthCard.v1.GetMonthCardListReply
	5, // [5:8] is the sub-list for method output_type
	2, // [2:5] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_api_monthCard_v1_monthCard_proto_init() }
func file_api_monthCard_v1_monthCard_proto_init() {
	if File_api_monthCard_v1_monthCard_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_monthCard_v1_monthCard_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_monthCard_v1_monthCard_proto_goTypes,
		DependencyIndexes: file_api_monthCard_v1_monthCard_proto_depIdxs,
		MessageInfos:      file_api_monthCard_v1_monthCard_proto_msgTypes,
	}.Build()
	File_api_monthCard_v1_monthCard_proto = out.File
	file_api_monthCard_v1_monthCard_proto_rawDesc = nil
	file_api_monthCard_v1_monthCard_proto_goTypes = nil
	file_api_monthCard_v1_monthCard_proto_depIdxs = nil
}
